package org.example.eventmanagermodule.security;


import org.example.eventmanagermodule.security.jwt.JwtTokenFilter;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.http.HttpMethod;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.AuthenticationProvider;
import org.springframework.security.authentication.dao.DaoAuthenticationProvider;
import org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration;
import org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.http.SessionCreationPolicy;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.security.web.authentication.AnonymousAuthenticationFilter;

@Configuration
@EnableMethodSecurity
// @EnableMethodSecurity ‚Äî –≤–∫–ª—é—á–∞–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É –∞–Ω–Ω–æ—Ç–∞—Ü–∏–π –≤—Ä–æ–¥–µ @PreAuthorize("hasAuthority('ADMIN')").
// –¢–æ –µ—Å—Ç—å —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–æ–≤–µ—Ä—è—Ç—å –ø—Ä–∞–≤–∞ –ø—Ä—è–º–æ –Ω–∞ —É—Ä–æ–≤–Ω–µ –º–µ—Ç–æ–¥–æ–≤, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ –ø–æ URL.
public class SecurityConfiguration {

    // –∫–ª–∞—Å—Å –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Å–µ–∫—é—Ä–∏—Ç–∏, –∏ –≤—ã–¥–∞—á–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    @Autowired
    private JwtTokenFilter jwtTokenFilter;


    //—ç—Ç–æ—Ç –∫–ª–∞—Å—Å –æ–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç —Ç–≤–æ–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ–±—ä–µ–∫—Ç UserDetails, –∫–æ—Ç–æ—Ä—ã–π Security –º–æ–∂–µ—Ç –ø–æ–Ω–∏–º–∞—Ç—å –∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å.
    @Autowired
    private CustomerDetailsService customerDetailsService;

    //–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ ‚Äî –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–æ—à—ë–ª –≤ —Å–∏—Å—Ç–µ–º—É, –Ω–æ –ø—ã—Ç–∞–µ—Ç—Å—è –ø–æ–ø–∞—Å—Ç—å –≤ –∑–∞—â–∏—â—ë–Ω–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç
    @Autowired//401
    private CustomAuthenticationEntryPoint customAuthenticationEntryPoint;


    //üö´ –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω, –Ω–æ –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤.
    @Autowired//403
    private CustomAccessDeniedHandler customAccessDeniedHandler;

    @Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        return http
                .formLogin(login -> login.disable())//‚Äî –æ—Ç–∫–ª—é—á–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é —Ñ–æ—Ä–º—É –ª–æ–≥–∏–Ω–∞ (–º—ã –Ω–µ —Ö–æ—Ç–∏–º HTML-—Ñ–æ—Ä–º—ã, —É –Ω–∞—Å REST + JWT).
                .csrf(csrf -> csrf.disable()) // ‚Äî –æ—Ç–∫–ª—é—á–∞–µ–º –∑–∞—â–∏—Ç—É –æ—Ç CSRF, —Ç–∞–∫ –∫–∞–∫ —É –Ω–∞—Å stateless REST API, –Ω–µ —Ö—Ä–∞–Ω–∏–º —Å–µ—Å—Å–∏–∏.
                .sessionManagement(session ->// ‚Äî –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å –Ω–µ–∑–∞–≤–∏—Å–∏–º, –¥–∞–Ω–Ω—ã–µ –Ω–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ —Å–µ—Å—Å–∏–∏
                        session.sessionCreationPolicy(SessionCreationPolicy.STATELESS)// —Ç–∞–∫ –∫–∞–∫ –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–π, –º–æ–∂–Ω–æ –±—ã–ª–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ñ–ª–∞–Ω, –Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤
                )
                .authorizeHttpRequests(authorizeRequests ->
                        authorizeRequests
                                .requestMatchers(HttpMethod.GET, "/locations/**")
                                .hasAnyAuthority("ADMIN", "USER")// –≤—Å–µ –º–æ–≥—É—Ç –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ—É –ø–æ –ª–æ–∫–∞—Ü–∏—è–º

                                .requestMatchers(HttpMethod.POST, "/locations/**")
                                .hasAnyAuthority("ADMIN")// –¥–æ–±–∞–≤–ª—è—Ç—å –ª–æ–∫–∞—Ü–∏—é –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω

                                .requestMatchers(HttpMethod.DELETE, "/locations/**")
                                .hasAnyAuthority("ADMIN")// —É–¥–∞–ª—è—Ç—å –ª–æ–∫–∞—Ü–∏—é –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω

                                .requestMatchers(HttpMethod.PUT, "/locations/**")
                                .hasAnyAuthority("ADMIN")// –∏–∑–º–µ–Ω—è—Ç—å –ª–æ–∫–∞—Ü–∏—é –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω

                                .requestMatchers(HttpMethod.GET, "/users/**")
                                .hasAnyAuthority("ADMIN")// –ø–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ—É –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω

                                .requestMatchers(HttpMethod.POST, "/users")
                                .permitAll()// —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤—Å–µ

                                .requestMatchers(HttpMethod.POST, "/users/auth")
                                .permitAll()// –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –≤—Å–µ
                                .anyRequest().authenticated()//‚Äî –≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ —Ç—Ä–µ–±—É–µ—Ç JWT –∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏.
                )
                .exceptionHandling(exception -> // ‚Äî –ø–æ–¥–∫–ª—é—á–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫ 401 –∏ 403.
                        exception
                                .authenticationEntryPoint(customAuthenticationEntryPoint)
                                .accessDeniedHandler(customAccessDeniedHandler)
                )
                .addFilterBefore(jwtTokenFilter, AnonymousAuthenticationFilter.class)//‚Äî –≤—Å—Ç–∞–≤–ª—è–µ–º –Ω–∞—à JwtTokenFilter –ø–µ—Ä–µ–¥ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–æ–º Spring, —á—Ç–æ–±—ã –æ–Ω –ø–µ—Ä–≤—ã–º –ø—Ä–æ–≤–µ—Ä—è–ª —Ç–æ–∫–µ–Ω.
                .build();// —Å–æ–±–∏—Ä–∞–µ–º
    }

    //AuthenticationManager ‚Üí –≥–ª–∞–≤–Ω—ã–π "–¥–∏—Ä–∏–∂—ë—Ä" –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏, –≤—ã–∑—ã–≤–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π AuthenticationProvider.
    @Bean
    public AuthenticationManager authenticationManager(AuthenticationConfiguration configuration) throws Exception {
        return configuration.getAuthenticationManager();
    }

    //AuthenticationProvider (–Ω–∞–ø—Ä–∏–º–µ—Ä DaoAuthenticationProvider) ‚Üí –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å —á–µ—Ä–µ–∑ UserDetailsService.
    @Bean
    public AuthenticationProvider authenticationProvider() {
        var authProvider = new DaoAuthenticationProvider();
/*
//‚Äî —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä Spring:
        –∏—Å–ø–æ–ª—å–∑—É–µ—Ç customerDetailsService –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è;
        —Å–≤–µ—Ä—è–µ—Ç –ø–∞—Ä–æ–ª–∏ —á–µ—Ä–µ–∑ PasswordEncoder.
        */
        authProvider.setUserDetailsService(customerDetailsService);
        authProvider.setPasswordEncoder(passwordEncoder());
        return authProvider;
    }


    @Bean
    public PasswordEncoder passwordEncoder() {
        return new BCryptPasswordEncoder();//‚Äî –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–ø–æ—Å–æ–± —Ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∏ –ª–æ–≥–∏–Ω–µ.
    }

}
